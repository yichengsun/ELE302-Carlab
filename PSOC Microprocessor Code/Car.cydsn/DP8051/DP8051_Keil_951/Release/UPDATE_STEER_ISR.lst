C51 COMPILER V9.51   UPDATE_STEER_ISR                                                      05/05/2015 14:41:01 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE UPDATE_STEER_ISR
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Release\UPDATE_STEER_ISR.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.1\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\UPDATE_STEER_ISR.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,.\Generated_Source\PSoC3) FF(3) D
                    -B WL(2) PR(.\DP8051\DP8051_Keil_951\Release/UPDATE_STEER_ISR.lst) CD OT(8,SIZE) OJ(.\DP8051\DP8051_Keil_951\Release\UPDA
                    -TE_STEER_ISR.obj)

line level    source

*** MESSAGE C286 IN LINE 0 OF (null): license limits optimization to level 5
   1          /*******************************************************************************
   2          * File Name: UPDATE_STEER_ISR.c  
   3          * Version 1.70
   4          *
   5          *  Description:
   6          *   API for controlling the state of an interrupt.
   7          *
   8          *
   9          *  Note:
  10          *
  11          ********************************************************************************
  12          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          *******************************************************************************/
  17          
  18          #include <cydevice_trm.h>
  19          #include <CyLib.h>
  20          #include <UPDATE_STEER_ISR.h>
  21          
  22          #if !defined(UPDATE_STEER_ISR__REMOVED) /* Check for removal by optimization */
  23          
  24          /*******************************************************************************
  25          *  Place your includes, defines and code here 
  26          ********************************************************************************/
  27          /* `#START UPDATE_STEER_ISR_intc` */
  28          
  29          /* `#END` */
  30          
  31          
  32          /*******************************************************************************
  33          * Function Name: UPDATE_STEER_ISR_Start
  34          ********************************************************************************
  35          *
  36          * Summary:
  37          *  Set up the interrupt and enable it.
  38          *
  39          * Parameters:  
  40          *   None
  41          *
  42          * Return:
  43          *   None
  44          *
  45          *******************************************************************************/
  46          void UPDATE_STEER_ISR_Start(void) 
  47          {
  48   1          /* For all we know the interrupt is active. */
  49   1          UPDATE_STEER_ISR_Disable();
  50   1      
  51   1          /* Set the ISR to point to the UPDATE_STEER_ISR Interrupt. */
C51 COMPILER V9.51   UPDATE_STEER_ISR                                                      05/05/2015 14:41:01 PAGE 2   

  52   1          UPDATE_STEER_ISR_SetVector(&UPDATE_STEER_ISR_Interrupt);
  53   1      
  54   1          /* Set the priority. */
  55   1          UPDATE_STEER_ISR_SetPriority((uint8)UPDATE_STEER_ISR_INTC_PRIOR_NUMBER);
  56   1      
  57   1          /* Enable it. */
  58   1          UPDATE_STEER_ISR_Enable();
  59   1      }
  60          
  61          
  62          /*******************************************************************************
  63          * Function Name: UPDATE_STEER_ISR_StartEx
  64          ********************************************************************************
  65          *
  66          * Summary:
  67          *  Set up the interrupt and enable it.
  68          *
  69          * Parameters:  
  70          *   address: Address of the ISR to set in the interrupt vector table.
  71          *
  72          * Return:
  73          *   None
  74          *
  75          *******************************************************************************/
  76          void UPDATE_STEER_ISR_StartEx(cyisraddress address) 
  77          {
  78   1          /* For all we know the interrupt is active. */
  79   1          UPDATE_STEER_ISR_Disable();
  80   1      
  81   1          /* Set the ISR to point to the UPDATE_STEER_ISR Interrupt. */
  82   1          UPDATE_STEER_ISR_SetVector(address);
  83   1      
  84   1          /* Set the priority. */
  85   1          UPDATE_STEER_ISR_SetPriority((uint8)UPDATE_STEER_ISR_INTC_PRIOR_NUMBER);
  86   1      
  87   1          /* Enable it. */
  88   1          UPDATE_STEER_ISR_Enable();
  89   1      }
  90          
  91          
  92          /*******************************************************************************
  93          * Function Name: UPDATE_STEER_ISR_Stop
  94          ********************************************************************************
  95          *
  96          * Summary:
  97          *   Disables and removes the interrupt.
  98          *
  99          * Parameters:  
 100          *   None
 101          *
 102          * Return:
 103          *   None
 104          *
 105          *******************************************************************************/
 106          void UPDATE_STEER_ISR_Stop(void) 
 107          {
 108   1          /* Disable this interrupt. */
 109   1          UPDATE_STEER_ISR_Disable();
 110   1      }
 111          
 112          
 113          /*******************************************************************************
C51 COMPILER V9.51   UPDATE_STEER_ISR                                                      05/05/2015 14:41:01 PAGE 3   

 114          * Function Name: UPDATE_STEER_ISR_Interrupt
 115          ********************************************************************************
 116          * Summary:
 117          *   The default Interrupt Service Routine for UPDATE_STEER_ISR.
 118          *
 119          *   Add custom code between the coments to keep the next version of this file
 120          *   from over writting your code.
 121          *
 122          * Parameters:  
 123          *   None
 124          *
 125          * Return:
 126          *   None
 127          *
 128          *******************************************************************************/
 129          CY_ISR(UPDATE_STEER_ISR_Interrupt)
 130          {
 131   1          /*  Place your Interrupt code here. */
 132   1          /* `#START UPDATE_STEER_ISR_Interrupt` */
 133   1      
 134   1          /* `#END` */
 135   1      
 136   1          /* PSoC3 ES1, ES2 RTC ISR PATCH  */ 
 137   1          #if(CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3)
 138   1              #if((CYDEV_CHIP_REVISION_USED <= CYDEV_CHIP_REVISION_3A_ES2) && (UPDATE_STEER_ISR__ES2_PATCH ))   
             -   
                          UPDATE_STEER_ISR_ISR_PATCH();
                      #endif /* CYDEV_CHIP_REVISION_USED */
 141   1          #endif /* (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3) */
 142   1      }
 143          
 144          
 145          /*******************************************************************************
 146          * Function Name: UPDATE_STEER_ISR_SetVector
 147          ********************************************************************************
 148          *
 149          * Summary:
 150          *   Change the ISR vector for the Interrupt. Note calling UPDATE_STEER_ISR_Start
 151          *   will override any effect this method would have had. To set the vector 
 152          *   before the component has been started use UPDATE_STEER_ISR_StartEx instead.
 153          *
 154          * Parameters:
 155          *   address: Address of the ISR to set in the interrupt vector table.
 156          *
 157          * Return:
 158          *   None
 159          *
 160          *******************************************************************************/
 161          void UPDATE_STEER_ISR_SetVector(cyisraddress address) 
 162          {
 163   1          CY_SET_REG16(UPDATE_STEER_ISR_INTC_VECTOR, (uint16) address);
 164   1      }
 165          
 166          
 167          /*******************************************************************************
 168          * Function Name: UPDATE_STEER_ISR_GetVector
 169          ********************************************************************************
 170          *
 171          * Summary:
 172          *   Gets the "address" of the current ISR vector for the Interrupt.
 173          *
 174          * Parameters:
C51 COMPILER V9.51   UPDATE_STEER_ISR                                                      05/05/2015 14:41:01 PAGE 4   

 175          *   None
 176          *
 177          * Return:
 178          *   Address of the ISR in the interrupt vector table.
 179          *
 180          *******************************************************************************/
 181          cyisraddress UPDATE_STEER_ISR_GetVector(void) 
 182          {
 183   1          return (cyisraddress) CY_GET_REG16(UPDATE_STEER_ISR_INTC_VECTOR);
 184   1      }
 185          
 186          
 187          /*******************************************************************************
 188          * Function Name: UPDATE_STEER_ISR_SetPriority
 189          ********************************************************************************
 190          *
 191          * Summary:
 192          *   Sets the Priority of the Interrupt. Note calling UPDATE_STEER_ISR_Start
 193          *   or UPDATE_STEER_ISR_StartEx will override any effect this method would 
 194          *   have had. This method should only be called after UPDATE_STEER_ISR_Start or 
 195          *   UPDATE_STEER_ISR_StartEx has been called. To set the initial
 196          *   priority for the component use the cydwr file in the tool.
 197          *
 198          * Parameters:
 199          *   priority: Priority of the interrupt. 0 - 7, 0 being the highest.
 200          *
 201          * Return:
 202          *   None
 203          *
 204          *******************************************************************************/
 205          void UPDATE_STEER_ISR_SetPriority(uint8 priority) 
 206          {
 207   1          *UPDATE_STEER_ISR_INTC_PRIOR = priority << 5;
 208   1      }
 209          
 210          
 211          /*******************************************************************************
 212          * Function Name: UPDATE_STEER_ISR_GetPriority
 213          ********************************************************************************
 214          *
 215          * Summary:
 216          *   Gets the Priority of the Interrupt.
 217          *
 218          * Parameters:
 219          *   None
 220          *
 221          * Return:
 222          *   Priority of the interrupt. 0 - 7, 0 being the highest.
 223          *
 224          *******************************************************************************/
 225          uint8 UPDATE_STEER_ISR_GetPriority(void) 
 226          {
 227   1          uint8 priority;
 228   1      
 229   1      
 230   1          priority = *UPDATE_STEER_ISR_INTC_PRIOR >> 5;
 231   1      
 232   1          return priority;
 233   1      }
 234          
 235          
 236          /*******************************************************************************
C51 COMPILER V9.51   UPDATE_STEER_ISR                                                      05/05/2015 14:41:01 PAGE 5   

 237          * Function Name: UPDATE_STEER_ISR_Enable
 238          ********************************************************************************
 239          *
 240          * Summary:
 241          *   Enables the interrupt.
 242          *
 243          * Parameters:
 244          *   None
 245          *
 246          * Return:
 247          *   None
 248          *
 249          *******************************************************************************/
 250          void UPDATE_STEER_ISR_Enable(void) 
 251          {
 252   1          /* Enable the general interrupt. */
 253   1          *UPDATE_STEER_ISR_INTC_SET_EN = UPDATE_STEER_ISR__INTC_MASK;
 254   1      }
 255          
 256          
 257          /*******************************************************************************
 258          * Function Name: UPDATE_STEER_ISR_GetState
 259          ********************************************************************************
 260          *
 261          * Summary:
 262          *   Gets the state (enabled, disabled) of the Interrupt.
 263          *
 264          * Parameters:
 265          *   None
 266          *
 267          * Return:
 268          *   1 if enabled, 0 if disabled.
 269          *
 270          *******************************************************************************/
 271          uint8 UPDATE_STEER_ISR_GetState(void) 
 272          {
 273   1          /* Get the state of the general interrupt. */
 274   1          return ((*UPDATE_STEER_ISR_INTC_SET_EN & (uint8)UPDATE_STEER_ISR__INTC_MASK) != 0u) ? 1u:0u;
 275   1      }
 276          
 277          
 278          /*******************************************************************************
 279          * Function Name: UPDATE_STEER_ISR_Disable
 280          ********************************************************************************
 281          *
 282          * Summary:
 283          *   Disables the Interrupt.
 284          *
 285          * Parameters:
 286          *   None
 287          *
 288          * Return:
 289          *   None
 290          *
 291          *******************************************************************************/
 292          void UPDATE_STEER_ISR_Disable(void) 
 293          {
 294   1          /* Disable the general interrupt. */
 295   1          *UPDATE_STEER_ISR_INTC_CLR_EN = UPDATE_STEER_ISR__INTC_MASK;
 296   1      }
 297          
 298          
C51 COMPILER V9.51   UPDATE_STEER_ISR                                                      05/05/2015 14:41:01 PAGE 6   

 299          /*******************************************************************************
 300          * Function Name: UPDATE_STEER_ISR_SetPending
 301          ********************************************************************************
 302          *
 303          * Summary:
 304          *   Causes the Interrupt to enter the pending state, a software method of
 305          *   generating the interrupt.
 306          *
 307          * Parameters:
 308          *   None
 309          *
 310          * Return:
 311          *   None
 312          *
 313          *******************************************************************************/
 314          void UPDATE_STEER_ISR_SetPending(void) 
 315          {
 316   1          *UPDATE_STEER_ISR_INTC_SET_PD = UPDATE_STEER_ISR__INTC_MASK;
 317   1      }
 318          
 319          
 320          /*******************************************************************************
 321          * Function Name: UPDATE_STEER_ISR_ClearPending
 322          ********************************************************************************
 323          *
 324          * Summary:
 325          *   Clears a pending interrupt.
 326          *
 327          * Parameters:
 328          *   None
 329          *
 330          * Return:
 331          *   None
 332          *
 333          *******************************************************************************/
 334          void UPDATE_STEER_ISR_ClearPending(void) 
 335          {
 336   1          *UPDATE_STEER_ISR_INTC_CLR_PD = UPDATE_STEER_ISR__INTC_MASK;
 337   1      }
 338          
 339          #endif /* End check for removal by optimization */
 340          
 341          
 342          /* [] END OF FILE */
C51 COMPILER V9.51   UPDATE_STEER_ISR                                                      05/05/2015 14:41:01 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION UPDATE_STEER_ISR_Start (BEGIN)
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 49
0000 120000      R     LCALL   UPDATE_STEER_ISR_Disable
                                           ; SOURCE LINE # 52
0003 7E00        R     MOV     R6,#HIGH UPDATE_STEER_ISR_Interrupt
0005 7F00        R     MOV     R7,#LOW UPDATE_STEER_ISR_Interrupt
0007 120000      R     LCALL   _UPDATE_STEER_ISR_SetVector
                                           ; SOURCE LINE # 55
000A 7F07              MOV     R7,#07H
000C 120000      R     LCALL   _UPDATE_STEER_ISR_SetPriority
                                           ; SOURCE LINE # 58
000F 120000      R     LCALL   UPDATE_STEER_ISR_Enable
                                           ; SOURCE LINE # 59
0012 22                RET     
             ; FUNCTION UPDATE_STEER_ISR_Start (END)

             ; FUNCTION _UPDATE_STEER_ISR_StartEx (BEGIN)
                                           ; SOURCE LINE # 76
0000 900000      R     MOV     DPTR,#address
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 79
0008 120000      R     LCALL   UPDATE_STEER_ISR_Disable
                                           ; SOURCE LINE # 82
000B 900000      R     MOV     DPTR,#address
000E E0                MOVX    A,@DPTR
000F FE                MOV     R6,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 120000      R     LCALL   _UPDATE_STEER_ISR_SetVector
                                           ; SOURCE LINE # 85
0016 7F07              MOV     R7,#07H
0018 120000      R     LCALL   _UPDATE_STEER_ISR_SetPriority
                                           ; SOURCE LINE # 88
001B 120000      R     LCALL   UPDATE_STEER_ISR_Enable
                                           ; SOURCE LINE # 89
001E 22                RET     
             ; FUNCTION _UPDATE_STEER_ISR_StartEx (END)

             ; FUNCTION UPDATE_STEER_ISR_Stop (BEGIN)
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 109
0000 120000      R     LCALL   UPDATE_STEER_ISR_Disable
                                           ; SOURCE LINE # 110
0003 22                RET     
             ; FUNCTION UPDATE_STEER_ISR_Stop (END)

             ; FUNCTION UPDATE_STEER_ISR_Interrupt (BEGIN)
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 142
0000 32                RETI    
C51 COMPILER V9.51   UPDATE_STEER_ISR                                                      05/05/2015 14:41:01 PAGE 8   

             ; FUNCTION UPDATE_STEER_ISR_Interrupt (END)

             ; FUNCTION _UPDATE_STEER_ISR_SetVector (BEGIN)
                                           ; SOURCE LINE # 161
;---- Variable 'address' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
0000 7B02              MOV     R3,#02H
0002 7A44              MOV     R2,#044H
0004 7908              MOV     R1,#08H
0006 AD07              MOV     R5,AR7
0008 AC06              MOV     R4,AR6
000A 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 164
000D 22                RET     
             ; FUNCTION _UPDATE_STEER_ISR_SetVector (END)

             ; FUNCTION UPDATE_STEER_ISR_GetVector (BEGIN)
                                           ; SOURCE LINE # 181
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
0000 7B02              MOV     R3,#02H
0002 7A44              MOV     R2,#044H
0004 7908              MOV     R1,#08H
0006 120000      E     LCALL   _cyread16_nodpx
                                           ; SOURCE LINE # 184
0009         ?C0006:
0009 22                RET     
             ; FUNCTION UPDATE_STEER_ISR_GetVector (END)

             ; FUNCTION _UPDATE_STEER_ISR_SetPriority (BEGIN)
                                           ; SOURCE LINE # 205
;---- Variable 'priority' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 206
                                           ; SOURCE LINE # 207
0000 EF                MOV     A,R7
0001 C4                SWAP    A
0002 33                RLC     A
0003 54E0              ANL     A,#0E0H
0005 904484            MOV     DPTR,#04484H
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 208
0009 22                RET     
             ; FUNCTION _UPDATE_STEER_ISR_SetPriority (END)

             ; FUNCTION UPDATE_STEER_ISR_GetPriority (BEGIN)
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 230
0000 904484            MOV     DPTR,#04484H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 C4                SWAP    A
0006 13                RRC     A
0007 5407              ANL     A,#07H
0009 FF                MOV     R7,A
;---- Variable 'priority' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
000A         ?C0008:
000A 22                RET     
             ; FUNCTION UPDATE_STEER_ISR_GetPriority (END)
C51 COMPILER V9.51   UPDATE_STEER_ISR                                                      05/05/2015 14:41:01 PAGE 9   


             ; FUNCTION UPDATE_STEER_ISR_Enable (BEGIN)
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 251
                                           ; SOURCE LINE # 253
0000 9044C0            MOV     DPTR,#044C0H
0003 7410              MOV     A,#010H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 254
0006 22                RET     
             ; FUNCTION UPDATE_STEER_ISR_Enable (END)

             ; FUNCTION UPDATE_STEER_ISR_GetState (BEGIN)
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 272
                                           ; SOURCE LINE # 274
0000 9044C0            MOV     DPTR,#044C0H
0003 E0                MOVX    A,@DPTR
0004 30E404            JNB     ACC.4,?C0010
0007 7F01              MOV     R7,#01H
0009 8002              SJMP    ?C0011
000B         ?C0010:
000B 7F00              MOV     R7,#00H
000D         ?C0011:
                                           ; SOURCE LINE # 275
000D         ?C0012:
000D 22                RET     
             ; FUNCTION UPDATE_STEER_ISR_GetState (END)

             ; FUNCTION UPDATE_STEER_ISR_Disable (BEGIN)
                                           ; SOURCE LINE # 292
                                           ; SOURCE LINE # 293
                                           ; SOURCE LINE # 295
0000 9044C8            MOV     DPTR,#044C8H
0003 7410              MOV     A,#010H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 296
0006 22                RET     
             ; FUNCTION UPDATE_STEER_ISR_Disable (END)

             ; FUNCTION UPDATE_STEER_ISR_SetPending (BEGIN)
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 315
                                           ; SOURCE LINE # 316
0000 9044D0            MOV     DPTR,#044D0H
0003 7410              MOV     A,#010H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 317
0006 22                RET     
             ; FUNCTION UPDATE_STEER_ISR_SetPending (END)

             ; FUNCTION UPDATE_STEER_ISR_ClearPending (BEGIN)
                                           ; SOURCE LINE # 334
                                           ; SOURCE LINE # 335
                                           ; SOURCE LINE # 336
0000 9044D8            MOV     DPTR,#044D8H
0003 7410              MOV     A,#010H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 337
0006 22                RET     
             ; FUNCTION UPDATE_STEER_ISR_ClearPending (END)

C51 COMPILER V9.51   UPDATE_STEER_ISR                                                      05/05/2015 14:41:01 PAGE 10  



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    142    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
