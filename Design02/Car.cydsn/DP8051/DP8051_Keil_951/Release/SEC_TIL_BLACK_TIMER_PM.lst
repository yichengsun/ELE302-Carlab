C51 COMPILER V9.51   SEC_TIL_BLACK_TIMER_PM                                                04/29/2015 00:20:26 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE SEC_TIL_BLACK_TIMER_PM
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Release\SEC_TIL_BLACK_TIMER_PM.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.1\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\SEC_TIL_BLACK_TIMER_PM.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,.\Generated_Source\PSoC3) F
                    -F(3) DB WL(2) PR(.\DP8051\DP8051_Keil_951\Release/SEC_TIL_BLACK_TIMER_PM.lst) CD OT(8,SIZE) OJ(.\DP8051\DP8051_Keil_951\
                    -Release\SEC_TIL_BLACK_TIMER_PM.obj)

line level    source

*** MESSAGE C286 IN LINE 0 OF (null): license limits optimization to level 5
   1          /*******************************************************************************
   2          * File Name: SEC_TIL_BLACK_TIMER_PM.c
   3          * Version 2.70
   4          *
   5          *  Description:
   6          *     This file provides the power management source code to API for the
   7          *     Timer.
   8          *
   9          *   Note:
  10          *     None
  11          *
  12          *******************************************************************************
  13          * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions,
  15          * disclaimers, and limitations in the end user license agreement accompanying
  16          * the software package with which this file was provided.
  17          ********************************************************************************/
  18          
  19          #include "SEC_TIL_BLACK_TIMER.h"
  20          
  21          static SEC_TIL_BLACK_TIMER_backupStruct SEC_TIL_BLACK_TIMER_backup;
  22          
  23          
  24          /*******************************************************************************
  25          * Function Name: SEC_TIL_BLACK_TIMER_SaveConfig
  26          ********************************************************************************
  27          *
  28          * Summary:
  29          *     Save the current user configuration
  30          *
  31          * Parameters:
  32          *  void
  33          *
  34          * Return:
  35          *  void
  36          *
  37          * Global variables:
  38          *  SEC_TIL_BLACK_TIMER_backup:  Variables of this global structure are modified to
  39          *  store the values of non retention configuration registers when Sleep() API is
  40          *  called.
  41          *
  42          *******************************************************************************/
  43          void SEC_TIL_BLACK_TIMER_SaveConfig(void) 
  44          {
  45   1          #if (!SEC_TIL_BLACK_TIMER_UsingFixedFunction)
  46   1              SEC_TIL_BLACK_TIMER_backup.TimerUdb = SEC_TIL_BLACK_TIMER_ReadCounter();
  47   1              SEC_TIL_BLACK_TIMER_backup.InterruptMaskValue = SEC_TIL_BLACK_TIMER_STATUS_MASK;
  48   1              #if (SEC_TIL_BLACK_TIMER_UsingHWCaptureCounter)
                          SEC_TIL_BLACK_TIMER_backup.TimerCaptureCounter = SEC_TIL_BLACK_TIMER_ReadCaptureCount();
                      #endif /* Back Up capture counter register  */
  51   1      
C51 COMPILER V9.51   SEC_TIL_BLACK_TIMER_PM                                                04/29/2015 00:20:26 PAGE 2   

  52   1              #if(!SEC_TIL_BLACK_TIMER_UDB_CONTROL_REG_REMOVED)
                          SEC_TIL_BLACK_TIMER_backup.TimerControlRegister = SEC_TIL_BLACK_TIMER_ReadControlRegister();
                      #endif /* Backup the enable state of the Timer component */
  55   1          #endif /* Backup non retention registers in UDB implementation. All fixed function registers are reten
             -tion */
  56   1      }
  57          
  58          
  59          /*******************************************************************************
  60          * Function Name: SEC_TIL_BLACK_TIMER_RestoreConfig
  61          ********************************************************************************
  62          *
  63          * Summary:
  64          *  Restores the current user configuration.
  65          *
  66          * Parameters:
  67          *  void
  68          *
  69          * Return:
  70          *  void
  71          *
  72          * Global variables:
  73          *  SEC_TIL_BLACK_TIMER_backup:  Variables of this global structure are used to
  74          *  restore the values of non retention registers on wakeup from sleep mode.
  75          *
  76          *******************************************************************************/
  77          void SEC_TIL_BLACK_TIMER_RestoreConfig(void) 
  78          {   
  79   1          #if (!SEC_TIL_BLACK_TIMER_UsingFixedFunction)
  80   1      
  81   1              SEC_TIL_BLACK_TIMER_WriteCounter(SEC_TIL_BLACK_TIMER_backup.TimerUdb);
  82   1              SEC_TIL_BLACK_TIMER_STATUS_MASK =SEC_TIL_BLACK_TIMER_backup.InterruptMaskValue;
  83   1              #if (SEC_TIL_BLACK_TIMER_UsingHWCaptureCounter)
                          SEC_TIL_BLACK_TIMER_SetCaptureCount(SEC_TIL_BLACK_TIMER_backup.TimerCaptureCounter);
                      #endif /* Restore Capture counter register*/
  86   1      
  87   1              #if(!SEC_TIL_BLACK_TIMER_UDB_CONTROL_REG_REMOVED)
                          SEC_TIL_BLACK_TIMER_WriteControlRegister(SEC_TIL_BLACK_TIMER_backup.TimerControlRegister);
                      #endif /* Restore the enable state of the Timer component */
  90   1          #endif /* Restore non retention registers in the UDB implementation only */
  91   1      }
  92          
  93          
  94          /*******************************************************************************
  95          * Function Name: SEC_TIL_BLACK_TIMER_Sleep
  96          ********************************************************************************
  97          *
  98          * Summary:
  99          *     Stop and Save the user configuration
 100          *
 101          * Parameters:
 102          *  void
 103          *
 104          * Return:
 105          *  void
 106          *
 107          * Global variables:
 108          *  SEC_TIL_BLACK_TIMER_backup.TimerEnableState:  Is modified depending on the
 109          *  enable state of the block before entering sleep mode.
 110          *
 111          *******************************************************************************/
 112          void SEC_TIL_BLACK_TIMER_Sleep(void) 
C51 COMPILER V9.51   SEC_TIL_BLACK_TIMER_PM                                                04/29/2015 00:20:26 PAGE 3   

 113          {
 114   1          #if(!SEC_TIL_BLACK_TIMER_UDB_CONTROL_REG_REMOVED)
                      /* Save Counter's enable state */
                      if(SEC_TIL_BLACK_TIMER_CTRL_ENABLE == (SEC_TIL_BLACK_TIMER_CONTROL & SEC_TIL_BLACK_TIMER_CTRL_ENAB
             -LE))
                      {
                          /* Timer is enabled */
                          SEC_TIL_BLACK_TIMER_backup.TimerEnableState = 1u;
                      }
                      else
                      {
                          /* Timer is disabled */
                          SEC_TIL_BLACK_TIMER_backup.TimerEnableState = 0u;
                      }
                  #endif /* Back up enable state from the Timer control register */
 127   1          SEC_TIL_BLACK_TIMER_Stop();
 128   1          SEC_TIL_BLACK_TIMER_SaveConfig();
 129   1      }
 130          
 131          
 132          /*******************************************************************************
 133          * Function Name: SEC_TIL_BLACK_TIMER_Wakeup
 134          ********************************************************************************
 135          *
 136          * Summary:
 137          *  Restores and enables the user configuration
 138          *
 139          * Parameters:
 140          *  void
 141          *
 142          * Return:
 143          *  void
 144          *
 145          * Global variables:
 146          *  SEC_TIL_BLACK_TIMER_backup.enableState:  Is used to restore the enable state of
 147          *  block on wakeup from sleep mode.
 148          *
 149          *******************************************************************************/
 150          void SEC_TIL_BLACK_TIMER_Wakeup(void) 
 151          {
 152   1          SEC_TIL_BLACK_TIMER_RestoreConfig();
 153   1          #if(!SEC_TIL_BLACK_TIMER_UDB_CONTROL_REG_REMOVED)
                      if(SEC_TIL_BLACK_TIMER_backup.TimerEnableState == 1u)
                      {     /* Enable Timer's operation */
                              SEC_TIL_BLACK_TIMER_Enable();
                      } /* Do nothing if Timer was disabled before */
                  #endif /* Remove this code section if Control register is removed */
 159   1      }
 160          
 161          
 162          /* [] END OF FILE */
C51 COMPILER V9.51   SEC_TIL_BLACK_TIMER_PM                                                04/29/2015 00:20:26 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION SEC_TIL_BLACK_TIMER_SaveConfig (BEGIN)
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 46
0000 120000      E     LCALL   SEC_TIL_BLACK_TIMER_ReadCounter
0003 900000      R     MOV     DPTR,#SEC_TIL_BLACK_TIMER_backup+01H
0006 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 47
0009 906484            MOV     DPTR,#06484H
000C E0                MOVX    A,@DPTR
000D 900000      R     MOV     DPTR,#SEC_TIL_BLACK_TIMER_backup+05H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 56
0011 22                RET     
             ; FUNCTION SEC_TIL_BLACK_TIMER_SaveConfig (END)

             ; FUNCTION SEC_TIL_BLACK_TIMER_RestoreConfig (BEGIN)
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 81
0000 900000      R     MOV     DPTR,#SEC_TIL_BLACK_TIMER_backup+01H
0003 120000      E     LCALL   ?C?LLDXDATA
0006 120000      E     LCALL   _SEC_TIL_BLACK_TIMER_WriteCounter
                                           ; SOURCE LINE # 82
0009 900000      R     MOV     DPTR,#SEC_TIL_BLACK_TIMER_backup+05H
000C E0                MOVX    A,@DPTR
000D 906484            MOV     DPTR,#06484H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 91
0011 22                RET     
             ; FUNCTION SEC_TIL_BLACK_TIMER_RestoreConfig (END)

             ; FUNCTION SEC_TIL_BLACK_TIMER_Sleep (BEGIN)
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 127
0000 120000      E     LCALL   SEC_TIL_BLACK_TIMER_Stop
                                           ; SOURCE LINE # 128
0003 120000      R     LCALL   SEC_TIL_BLACK_TIMER_SaveConfig
                                           ; SOURCE LINE # 129
0006 22                RET     
             ; FUNCTION SEC_TIL_BLACK_TIMER_Sleep (END)

             ; FUNCTION SEC_TIL_BLACK_TIMER_Wakeup (BEGIN)
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 152
0000 120000      R     LCALL   SEC_TIL_BLACK_TIMER_RestoreConfig
                                           ; SOURCE LINE # 159
0003 22                RET     
             ; FUNCTION SEC_TIL_BLACK_TIMER_Wakeup (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     47    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.51   SEC_TIL_BLACK_TIMER_PM                                                04/29/2015 00:20:26 PAGE 5   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
