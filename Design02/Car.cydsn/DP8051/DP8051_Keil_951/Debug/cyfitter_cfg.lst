C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.1\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,.\Generated_Source\PSoC3) FF(3) DB DF
                    -(DEBUG) WL(2) PR(.\DP8051\DP8051_Keil_951\Debug/cyfitter_cfg.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitt
                    -er_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator  3.1
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  25          
  26          
  27          #if defined(__C51__) || defined(__CX51__)
  28                  #define CYPACKED
  29                  #define CYPACKED_ATTR
  30                  #define CYALIGNED
  31                  
  32              #define CY_CFG_UNUSED
  33                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  34          
  35          
  36          
  37                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  38                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  39                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  40          #else
                      #error Unsupported toolchain
              #endif
  43          
  44          
  45          
  46          /* Clock startup error codes                                                   */
  47          #define CYCLOCKSTART_NO_ERROR    0u
  48          #define CYCLOCKSTART_XTAL_ERROR  1u
  49          #define CYCLOCKSTART_32KHZ_ERROR 2u
  50          #define CYCLOCKSTART_PLL_ERROR   3u
  51          
  52          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 2   

  53          /*******************************************************************************
  54          * Function Name: CyClockStartupError
  55          ********************************************************************************
  56          * Summary:
  57          *  If an error is encountered during clock configuration (crystal startup error,
  58          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  59          *  the customer, this function will stop in an infinite loop.
  60          *
  61          * Parameters:
  62          *   void
  63          *
  64          * Return:
  65          *   void
  66          *
  67          *******************************************************************************/
  68          CY_CFG_UNUSED
  69          static void CyClockStartupError(uint8 errorCode);
  70          CY_CFG_UNUSED
  71          static void CyClockStartupError(uint8 errorCode)
  72          {
  73   1          /* To remove the compiler warning if errorCode not used.                */
  74   1          errorCode = errorCode;
  75   1      
  76   1          /* `#START CyClockStartupError` */
  77   1      
  78   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  79   1          /* we will end up here to allow the customer to implement something to  */
  80   1          /* deal with the clock condition.                                       */
  81   1      
  82   1          /* `#END` */
  83   1      
  84   1          /* If nothing else, stop here since the clocks have not started         */
  85   1          /* correctly.                                                           */
  86   1          while(1) {}
  87   1      }
  88          #endif
  89          
  90          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  91          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
  92          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x00080458u)
  93          
  94          /* IOPINS0_4 Address: CYREG_PRT4_DM0 Size (bytes): 8 */
  95          #define BS_IOPINS0_4_VAL ((const uint8 CYFAR *)0x00080460u)
  96          
  97          /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
  98          #define BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL ((const uint8 CYFAR *)0x00080468u)
  99          
 100          
 101          /*******************************************************************************
 102          * Function Name: ClockSetup
 103          ********************************************************************************
 104          *
 105          * Summary:
 106          *  Performs the initialization of all of the clocks in the device based on the
 107          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 108          *  clocks and setting the necessary dividers to produce the desired frequency. 
 109          *
 110          * Parameters:
 111          *  void
 112          *
 113          * Return:
 114          *  void
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 3   

 115          *
 116          *******************************************************************************/
 117          static void ClockSetup(void);
 118          static void ClockSetup(void)
 119          {
 120   1              uint32 timeout;
 121   1              uint8 pllLock;
 122   1      
 123   1      
 124   1              /* Configure Digital Clocks based on settings from Clock DWR */
 125   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0001u);
 126   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 127   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x0007u);
 128   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x18u);
 129   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x0017u);
 130   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x18u);
 131   1      
 132   1              /* Configure Analog Clocks based on settings from Clock DWR */
 133   1              CYCONFIGCPY((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYFAR *)(BS_CYDEV_CLKDIST_ACFG0_CFG0_VA
             -L), 4u);
 134   1      
 135   1              /* Configure ILO based on settings from Clock DWR */
 136   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 137   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 138   1      
 139   1              /* Configure IMO based on settings from Clock DWR */
 140   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 141   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 142   1      
 143   1              /* Configure PLL based on settings from Clock DWR */
 144   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 145   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 146   1              /* Wait up to 250us for the PLL to lock */
 147   1              pllLock = 0u;
 148   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 149   1              { 
 150   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 151   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 152   2              }
 153   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 154   1              if (timeout == 0u)
 155   1              {
 156   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 157   2              }
 158   1      
 159   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 160   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 161   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 162   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 163   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 164   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 165   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 166   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04u);
 167   1      
 168   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x07u
             -)));
 169   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG1) | 0x01u
             -)));
 170   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x80u
             -)));
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 4   

 171   1      }
 172          
 173          
 174          /* Analog API Functions */
 175          
 176          
 177          /*******************************************************************************
 178          * Function Name: AnalogSetDefault
 179          ********************************************************************************
 180          *
 181          * Summary:
 182          *  Sets up the analog portions of the chip to default values based on chip
 183          *  configuration options from the project.
 184          *
 185          * Parameters:
 186          *  void
 187          *
 188          * Return:
 189          *  void
 190          *
 191          *******************************************************************************/
 192          static void AnalogSetDefault(void);
 193          static void AnalogSetDefault(void)
 194          {
 195   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 196   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 197   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 198   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT4_AG, 0x01u);
 199   1              CY_SET_REG8((void CYXDATA *)CYREG_DAC2_SW0, 0x20u);
 200   1              CY_SET_REG8((void CYXDATA *)CYREG_CMP2_SW0, 0x10u);
 201   1              CY_SET_REG8((void CYXDATA *)CYREG_CMP2_SW4, 0x20u);
 202   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 203   1      }
 204          
 205          
 206          /*******************************************************************************
 207          * Function Name: SetAnalogRoutingPumps
 208          ********************************************************************************
 209          *
 210          * Summary:
 211          * Enables or disables the analog pumps feeding analog routing switches.
 212          * Intended to be called at startup, based on the Vdda system configuration;
 213          * may be called during operation when the user informs us that the Vdda voltage
 214          * crossed the pump threshold.
 215          *
 216          * Parameters:
 217          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 218          *
 219          * Return:
 220          *  void
 221          *
 222          *******************************************************************************/
 223          void SetAnalogRoutingPumps(uint8 enabled)
 224          {
 225   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 226   1              if (enabled != 0u)
 227   1              {
 228   2                      regValue |= 0x22u;
 229   2              }
 230   1              else
 231   1              {
 232   2                      regValue &= (uint8)~0x22u;
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 5   

 233   2              }
 234   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 235   1      }
 236          
 237          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 238          
 239          
 240          /*******************************************************************************
 241          * Function Name: cyfitter_cfg
 242          ********************************************************************************
 243          * Summary:
 244          *  This function is called by the start-up code for the selected device. It
 245          *  performs all of the necessary device configuration based on the design
 246          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 247          *  as Clocks and Pins as well as any component configuration that is necessary.
 248          *
 249          * Parameters:  
 250          *   void
 251          *
 252          * Return:
 253          *   void
 254          *
 255          *******************************************************************************/
 256          
 257          void cyfitter_cfg(void)
 258          {
 259   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 260   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 261   1      
 262   1              {
 263   2      
 264   2                      CYPACKED typedef struct {
 265   2                              void CYFAR *address;
 266   2                              uint16 size;
 267   2                      } CYPACKED_ATTR cfg_memset_t;
 268   2      
 269   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 270   2                              /* address, size */
 271   2                              {(void CYFAR *)(CYREG_PRT0_DR), 32u},
 272   2                              {(void CYFAR *)(CYREG_PRT3_DR), 16u},
 273   2                              {(void CYFAR *)(CYREG_PRT5_DR), 32u},
 274   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 275   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 276   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 277   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 278   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 279   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 280   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 281   2                      };
 282   2      
 283   2                      uint8 CYDATA i;
 284   2      
 285   2                      /* Zero out critical memory blocks before beginning configuration */
 286   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 287   2                      {
 288   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 289   3                              CYMEMZERO(ms->address, ms->size);
 290   3                      }
 291   2      
 292   2                      cfg_write_bytes(cfg_byte_table);
 293   2      
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 6   

 294   2                      /* Perform normal device configuration. Order is not critical for these items. */
 295   2                      CY_SET_XTND_REG16((void CYFAR *)(CYREG_LUT2_CR), 0x0203u);
 296   2      
 297   2                      /* Enable digital routing */
 298   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 299   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 300   2      
 301   2                      /* Enable UDB array */
 302   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 303   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 304   2              }
 305   1      
 306   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 307   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (const void CYFAR *)(BS_IOPINS0_2_VAL), 8u);
 308   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT4_DM0), (const void CYFAR *)(BS_IOPINS0_4_VAL), 8u);
 309   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 310   1      
 311   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 312   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 313   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 314   1              {
 315   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 316   2              }
 317   1      
 318   1      
 319   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 320   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 321   1              /* Setup clocks based on selections from Clock DWR */
 322   1              ClockSetup();
 323   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 324   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 325   1      
 326   1              /* Perform basic analog initialization to defaults */
 327   1              AnalogSetDefault();
 328   1      
 329   1              /* Configure alternate active mode */
 330   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 331   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 332   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 71
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 86
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 125
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D01              MOV     R5,#01H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 126
000D 904082            MOV     DPTR,#04082H
0010 7418              MOV     A,#018H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 127
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 7D07              MOV     R5,#07H
001B 7C00              MOV     R4,#00H
001D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 128
0020 904086            MOV     DPTR,#04086H
0023 7418              MOV     A,#018H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 129
0026 7B00              MOV     R3,#00H
0028 7A40              MOV     R2,#040H
002A 7988              MOV     R1,#088H
002C 7D17              MOV     R5,#017H
002E 7C00              MOV     R4,#00H
0030 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 130
0033 90408A            MOV     DPTR,#0408AH
0036 7418              MOV     A,#018H
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 133
0039 7B08              MOV     R3,#08H
003B 7A04              MOV     R2,#04H
003D 7968              MOV     R1,#068H
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 8   

003F C003              PUSH    AR3
0041 C002              PUSH    AR2
0043 C001              PUSH    AR1
0045 7B00              MOV     R3,#00H
0047 7A41              MOV     R2,#041H
0049 7900              MOV     R1,#00H
004B 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
004E 120000      E     LCALL   ?C?PSTXDATA
0051 D001              POP     AR1
0053 D002              POP     AR2
0055 D003              POP     AR3
0057 7F04              MOV     R7,#04H
0059 7E00              MOV     R6,#00H
005B 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 136
005E 904300            MOV     DPTR,#04300H
0061 7402              MOV     A,#02H
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
0064 904000            MOV     DPTR,#04000H
0067 7408              MOV     A,#08H
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
006A 904200            MOV     DPTR,#04200H
006D 7403              MOV     A,#03H
006F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
0070 7B0C              MOV     R3,#0CH
0072 7A01              MOV     R2,#01H
0074 7908              MOV     R1,#08H
0076 120000      E     LCALL   _cyread8
0079 9046A1            MOV     DPTR,#046A1H
007C EF                MOV     A,R7
007D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
007E 7B00              MOV     R3,#00H
0080 7A42              MOV     R2,#042H
0082 7922              MOV     R1,#022H
0084 7D08              MOV     R5,#08H
0086 7C00              MOV     R4,#00H
0088 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 145
008B 7B00              MOV     R3,#00H
008D 7A42              MOV     R2,#042H
008F 7920              MOV     R1,#020H
0091 7D51              MOV     R5,#051H
0093 7C12              MOV     R4,#012H
0095 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 147
0098 900000      R     MOV     DPTR,#pllLock
009B E4                CLR     A
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 148
009D 7F19              MOV     R7,#019H
009F 7E00              MOV     R6,#00H
00A1 7D00              MOV     R5,#00H
00A3 7C00              MOV     R4,#00H
00A5 900000      R     MOV     DPTR,#timeout
00A8 120000      E     LCALL   ?C?LSTXDATA
00AB         ?C0004:
00AB 900000      R     MOV     DPTR,#timeout
00AE 120000      E     LCALL   ?C?LLDXDATA
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 9   

00B1 D3                SETB    C
00B2 EF                MOV     A,R7
00B3 9400              SUBB    A,#00H
00B5 EE                MOV     A,R6
00B6 9400              SUBB    A,#00H
00B8 404E              JC      ?C0005
00BA 900000      R     MOV     DPTR,#pllLock
00BD E0                MOVX    A,@DPTR
00BE FF                MOV     R7,A
00BF EF                MOV     A,R7
00C0 6403              XRL     A,#03H
00C2 6044              JZ      ?C0005
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
00C4 904225            MOV     DPTR,#04225H
00C7 E0                MOVX    A,@DPTR
00C8 FF                MOV     R7,A
00C9 EF                MOV     A,R7
00CA 5401              ANL     A,#01H
00CC FF                MOV     R7,A
00CD 7E00              MOV     R6,#00H
00CF 900000      R     MOV     DPTR,#pllLock
00D2 E0                MOVX    A,@DPTR
00D3 FE                MOV     R6,A
00D4 EE                MOV     A,R6
00D5 25E0              ADD     A,ACC
00D7 FE                MOV     R6,A
00D8 EE                MOV     A,R6
00D9 4F                ORL     A,R7
00DA FF                MOV     R7,A
00DB EF                MOV     A,R7
00DC 5403              ANL     A,#03H
00DE FF                MOV     R7,A
00DF 900000      R     MOV     DPTR,#pllLock
00E2 EF                MOV     A,R7
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 151
00E4 7FE0              MOV     R7,#0E0H
00E6 7E01              MOV     R6,#01H
00E8 7D00              MOV     R5,#00H
00EA 7C00              MOV     R4,#00H
00EC 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 152
00EF 900000      R     MOV     DPTR,#timeout
00F2 120000      E     LCALL   ?C?LLDXDATA
00F5 7BFF              MOV     R3,#0FFH
00F7 7AFF              MOV     R2,#0FFH
00F9 79FF              MOV     R1,#0FFH
00FB 78FF              MOV     R0,#0FFH
00FD 120000      E     LCALL   ?C?LADD
0100 900000      R     MOV     DPTR,#timeout
0103 120000      E     LCALL   ?C?LSTXDATA
0106 80A3              SJMP    ?C0004
0108         ?C0005:
                                           ; SOURCE LINE # 154
0108 900000      R     MOV     DPTR,#timeout
010B 120000      E     LCALL   ?C?LLDXDATA
010E EF                MOV     A,R7
010F 4E                ORL     A,R6
0110 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 10  

0112 7F03              MOV     R7,#03H
0114 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 157
0117         ?C0007:
                                           ; SOURCE LINE # 160
0117 7B00              MOV     R3,#00H
0119 7A40              MOV     R2,#040H
011B 7904              MOV     R1,#04H
011D 7D00              MOV     R5,#00H
011F 7C01              MOV     R4,#01H
0121 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 161
0124 904004            MOV     DPTR,#04004H
0127 7407              MOV     A,#07H
0129 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
012A 904006            MOV     DPTR,#04006H
012D E4                CLR     A
012E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 163
012F 904008            MOV     DPTR,#04008H
0132 7448              MOV     A,#048H
0134 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
0135 904004            MOV     DPTR,#04004H
0138 E4                CLR     A
0139 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 165
013A 904001            MOV     DPTR,#04001H
013D 7402              MOV     A,#02H
013F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
0140 90400B            MOV     DPTR,#0400BH
0143 7404              MOV     A,#04H
0145 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
0146 9043A2            MOV     DPTR,#043A2H
0149 E0                MOVX    A,@DPTR
014A FF                MOV     R7,A
014B EF                MOV     A,R7
014C 4407              ORL     A,#07H
014E FF                MOV     R7,A
014F 9043A2            MOV     DPTR,#043A2H
0152 EF                MOV     A,R7
0153 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 169
0154 9043A1            MOV     DPTR,#043A1H
0157 E0                MOVX    A,@DPTR
0158 FF                MOV     R7,A
0159 EF                MOV     A,R7
015A 4401              ORL     A,#01H
015C FF                MOV     R7,A
015D 9043A1            MOV     DPTR,#043A1H
0160 EF                MOV     A,R7
0161 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
0162 9043A0            MOV     DPTR,#043A0H
0165 E0                MOVX    A,@DPTR
0166 FF                MOV     R7,A
0167 EF                MOV     A,R7
0168 4480              ORL     A,#080H
016A FF                MOV     R7,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 11  

016B 9043A0            MOV     DPTR,#043A0H
016E EF                MOV     A,R7
016F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 171
0170 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 195
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 196
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 198
002F 90514D            MOV     DPTR,#0514DH
0032 7401              MOV     A,#01H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 199
0035 905A90            MOV     DPTR,#05A90H
0038 7420              MOV     A,#020H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 200
003B 905AD0            MOV     DPTR,#05AD0H
003E 7410              MOV     A,#010H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
0041 905AD4            MOV     DPTR,#05AD4H
0044 7420              MOV     A,#020H
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
0047 905876            MOV     DPTR,#05876H
004A 7444              MOV     A,#044H
004C F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 12  

                                           ; SOURCE LINE # 203
004D 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 223
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 225
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 226
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 228
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 229
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 232
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 233
0035         ?C0011:
                                           ; SOURCE LINE # 234
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 235
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 13  

                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 258
                                           ; SOURCE LINE # 260
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 262
                                           ; SOURCE LINE # 286
0016 750000      R     MOV     i,#00H
0019         ?C0013:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 940A              SUBB    A,#0AH
001E 503A              JNC     ?C0014
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 288
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 289
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 290
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0013
005A         ?C0014:
                                           ; SOURCE LINE # 292
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 14  

0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 295
0063 7B00              MOV     R3,#00H
0065 7A58              MOV     R2,#058H
0067 794C              MOV     R1,#04CH
0069 7D03              MOV     R5,#03H
006B 7C02              MOV     R4,#02H
006D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 298
0070 7B01              MOV     R3,#01H
0072 7A50              MOV     R2,#050H
0074 7903              MOV     R1,#03H
0076 120000      E     LCALL   _cyread8
0079 EF                MOV     A,R7
007A 4402              ORL     A,#02H
007C FD                MOV     R5,A
007D 7B01              MOV     R3,#01H
007F 7A50              MOV     R2,#050H
0081 7903              MOV     R1,#03H
0083 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 299
0086 7B01              MOV     R3,#01H
0088 7A50              MOV     R2,#050H
008A 7913              MOV     R1,#013H
008C 120000      E     LCALL   _cyread8
008F EF                MOV     A,R7
0090 4402              ORL     A,#02H
0092 FD                MOV     R5,A
0093 7B01              MOV     R3,#01H
0095 7A50              MOV     R2,#050H
0097 7913              MOV     R1,#013H
0099 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 302
009C 9043A0            MOV     DPTR,#043A0H
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 EF                MOV     A,R7
00A2 4440              ORL     A,#040H
00A4 FF                MOV     R7,A
00A5 9043A0            MOV     DPTR,#043A0H
00A8 EF                MOV     A,R7
00A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
00AA 9043C2            MOV     DPTR,#043C2H
00AD E0                MOVX    A,@DPTR
00AE FF                MOV     R7,A
00AF EF                MOV     A,R7
00B0 4410              ORL     A,#010H
00B2 FF                MOV     R7,A
00B3 9043C2            MOV     DPTR,#043C2H
00B6 EF                MOV     A,R7
00B7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 307
00B8 7B08              MOV     R3,#08H
00BA 7A04              MOV     R2,#04H
00BC 7958              MOV     R1,#058H
00BE C003              PUSH    AR3
00C0 C002              PUSH    AR2
00C2 C001              PUSH    AR1
00C4 7B00              MOV     R3,#00H
00C6 7A51              MOV     R2,#051H
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 15  

00C8 7922              MOV     R1,#022H
00CA 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00CD 120000      E     LCALL   ?C?PSTXDATA
00D0 D001              POP     AR1
00D2 D002              POP     AR2
00D4 D003              POP     AR3
00D6 7F08              MOV     R7,#08H
00D8 7E00              MOV     R6,#00H
00DA 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 308
00DD 7B08              MOV     R3,#08H
00DF 7A04              MOV     R2,#04H
00E1 7960              MOV     R1,#060H
00E3 C003              PUSH    AR3
00E5 C002              PUSH    AR2
00E7 C001              PUSH    AR1
00E9 7B00              MOV     R3,#00H
00EB 7A51              MOV     R2,#051H
00ED 7942              MOV     R1,#042H
00EF 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00F2 120000      E     LCALL   ?C?PSTXDATA
00F5 D001              POP     AR1
00F7 D002              POP     AR2
00F9 D003              POP     AR3
00FB 7F08              MOV     R7,#08H
00FD 7E00              MOV     R6,#00H
00FF 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 309
0102 9044F4            MOV     DPTR,#044F4H
0105 7401              MOV     A,#01H
0107 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 312
0108 904322            MOV     DPTR,#04322H
010B E0                MOVX    A,@DPTR
010C FF                MOV     R7,A
010D EF                MOV     A,R7
010E 4408              ORL     A,#08H
0110 FF                MOV     R7,A
0111 904322            MOV     DPTR,#04322H
0114 EF                MOV     A,R7
0115 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 313
0116 9046EC            MOV     DPTR,#046ECH
0119 E0                MOVX    A,@DPTR
011A FF                MOV     R7,A
011B EF                MOV     A,R7
011C C3                CLR     C
011D 9405              SUBB    A,#05H
011F 5006              JNC     ?C0016
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 315
0121 904689            MOV     DPTR,#04689H
0124 743A              MOV     A,#03AH
0126 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 316
0127         ?C0016:
                                           ; SOURCE LINE # 320
0127 904800            MOV     DPTR,#04800H
012A 74F1              MOV     A,#0F1H
012C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 322
012D 120000      R     LCALL   ClockSetup
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/25/2015 22:39:45 PAGE 16  

                                           ; SOURCE LINE # 324
0130 904800            MOV     DPTR,#04800H
0133 74B1              MOV     A,#0B1H
0135 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 327
0136 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 330
0139 7B00              MOV     R3,#00H
013B 7A43              MOV     R2,#043H
013D 79A0              MOV     R1,#0A0H
013F C003              PUSH    AR3
0141 C002              PUSH    AR2
0143 C001              PUSH    AR1
0145 7B00              MOV     R3,#00H
0147 7A43              MOV     R2,#043H
0149 79B0              MOV     R1,#0B0H
014B 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
014E 120000      E     LCALL   ?C?PSTXDATA
0151 D001              POP     AR1
0153 D002              POP     AR2
0155 D003              POP     AR3
0157 7F0E              MOV     R7,#0EH
0159 7E00              MOV     R6,#00H
015B 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 331
015E 9043B0            MOV     DPTR,#043B0H
0161 E0                MOVX    A,@DPTR
0162 FF                MOV     R7,A
0163 EF                MOV     A,R7
0164 54FD              ANL     A,#0FDH
0166 FF                MOV     R7,A
0167 EF                MOV     A,R7
0168 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 332
0169 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    891    ----
   CONSTANT SIZE    =     50    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
